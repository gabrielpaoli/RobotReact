{"version":3,"sources":["components/game/Robot.js","components/game/Player.js","components/game/Market.js","components/game/Hits.js","components/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["Robot","props","className","src","robot","imgSrc","alt","hp","gold","secondsToKill","Player","player","attackMin","attackMax","partyAttack","Market","marketItemsDamage","map","item","i","key","id","name","damage","price","onClick","buyItem","Hits","realDamage","Game","useState","initialHp","createdTime","actualTime","setRobot","setPlayer","lastRobotDead","gameStatus","setGameStatus","setSecondsToKill","market","setRealDamage","changeRobot","timeOut","timeDifference","createNewRobot","parseInt","updateSeconds","Date","getTime","attackRobot","Math","floor","random","showHitAnimation","Audio","play","hitDiv","document","getElementsByClassName","classList","add","addEventListener","remove","isTheRobotDead","position","newHp","newGold","newImgSrc","newId","onkeydown","e","keyCode","useEffect","interval","setInterval","partyAttackRobot","clearInterval","playerGold","playerAttackMin","playerAttackMax","playerPartyAttack","type","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e647618.chunk.js","sourcesContent":["import React from 'react';\n\nconst Robot = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div><img className=\"robotImage\" src={props.robot.imgSrc}></img></div>\n\t\t\t<div><span><img className=\"magicIcon\" alt=\"Sword\" src=\"img/heart.png\" /></span> {props.robot.hp}</div>\n\t\t\t<div><span><img className=\"magicIcon\" alt=\"Sword\" src=\"img/money.png\" /></span> {props.robot.gold}</div>\n\t\t\t<div>{props.secondsToKill}/20</div>\n\t\t</div>\n\t);\n};\n\t\nexport default Robot;","import React from 'react';\n\nconst Player = (props) => {\n\treturn (\n\t\t<div className=\"col m12 s12 playerInfo\">\n\t\t\t<div className=\"containerPlayerInfo\">\n\t\t\t\n\t\t\t<div className=\"row\">\n\n\t\t\t\t<div className=\"col m6 s6\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<h4 className=\"col m12 left-align\">Player data</h4>\n\t\t\t\t\t\t<div className=\"col m12\">\n\t\t\t\t\t\t\t<div className=\"left-align\">\n\t\t\t\t\t\t\t\t<div><span><img className=\"magicIcon\" alt=\"Sword\" src=\"img/weapon.png\" /></span> {props.player.attackMin} - {props.player.attackMax}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col m12\">\n\t\t\t\t\t\t\t<div className=\"left-align\">\n\t\t\t\t\t\t\t\t<div><span><img className=\"magicIcon\" alt=\"Chest gold\" src=\"img/treasure_chest.png\" /></span> {props.player.gold}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col m6 s6\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<h4 className=\"col m12 left-align\">Party data</h4>\n\t\t\t\t\t\t<div className=\"col m12\">\n\t\t\t\t\t\t\t<div className=\"left-align\">\n\t\t\t\t\t\t\t\t<div><span><img className=\"magicIcon\" alt=\"Sword\" src=\"img/weapon.png\" /></span> {props.player.partyAttack}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\t\nexport default Player;","import React from 'react';\n\nconst Market = (props) => {\n\treturn (\n\t\t<div className=\"col m12 s12 market\">\n\t\t\t<div className=\"containerMarket\">\n\t\t\t\t\t{\tprops.marketItemsDamage.map(function(item, i){\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"row containerMarketInn m12 valign-wrapper\" key={item.id}>\t\n\t\t\t\t\t\t\t\t\t<div className=\"marketImage col m3 s12\"><img src=\"https://via.placeholder.com/60.png/ffb74d/000000?text=weapon\" /></div>\n\t\t\t\t\t\t\t\t\t<div className=\"marketInfo col m6 s12\">\n\t\t\t\t\t\t\t\t\t\t<div>{item.name}</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"left-align\">\n\t\t\t\t\t\t\t\t\t\t\t<div><span><img className=\"magicIcon\" alt=\"Damage\" src=\"img/weapon.png\" /></span> {item.damage}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"left-align\">\n\t\t\t\t\t\t\t\t\t\t\t<div><span><img className=\"magicIcon\" alt=\"Gold\" src=\"img/money.png\" /></span> {item.price}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"marketBuy col m3 s12\">\n\t\t\t\t\t\t\t\t\t\t{props.player.gold >= item.price &&\n\t\t\t\t\t\t\t\t\t\t\t<div><button onClick={() => props.buyItem(item)}>BUY</button></div>\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\t\n\t);\n};\n\t\nexport default Market;","import React from 'react';\n\nconst Hits = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"hit\">\n\t\t\t\t{props.realDamage}\n\t\t\t</div>\n\t\t\t<div className=\"hit2\">\n\t\t\t\t{props.player.partyAttack}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\t\nexport default Hits;","import React, { useState, useEffect} from 'react';\nimport marketItemsDamage from \"../../json/market.json\";\nimport Robot from \"./Robot.js\";\nimport Player from \"./Player.js\";\nimport Market from \"./Market.js\";\nimport Hits from \"./Hits.js\";\n\n//TODO: Add critical\n//TODO: Split code\n//TODO: Next steps....\n//TODO: Add paladin hit\n\nconst Game = (props) => {\n\tconst [robot, setRobot] = useState({hp:2, initialHp:2, gold:2, imgSrc: 'https://robohash.org/0', id: 0, createdTime: actualTime()});\n\tconst [player, setPlayer] = useState({attackMin: 0, attackMax: 3, partyAttack: 0, gold: 0 });\n\tconst [gameStatus, setGameStatus] = useState({lastRobotDead:null});\n\tconst [secondsToKill, setSecondsToKill] = useState(0);\n\tconst [market, setMarket] = useState(marketItemsDamage);\n\tconst [realDamage, setRealDamage] = useState(0);\n\n\tfunction asignGoldToPlayer(){\n\t\tplayer.gold = player.gold + robot.gold;\n\t}\n\n\tfunction changeRobot(hp = robot.hp, initialHp = robot.initialHp, gold = robot.gold, imgSrc = robot.imgSrc,  id = robot.id, createdTime = robot.createdTime){\n\t\tsetRobot({\n\t\t\thp: hp,\n\t\t\tinitialHp: initialHp,\n\t\t\tgold: gold,\n\t\t\timgSrc: imgSrc,\n\t\t\tid: id,\n\t\t\tcreatedTime: createdTime\n\t\t})\t\t\t\n\t}\n\n\tfunction createTimeDifference(){\n\t\treturn actualTime() - robot.createdTime;\n\t}\n\n\tfunction timeOut(){\n\t\tlet timeDifference = createTimeDifference();\n    if(timeDifference >= 20000 && robot.createdTime != null){\n\t\t\tcreateNewRobot('actual');\n\t\t\tsetSecondsToKill(0);\n      return;\n\t\t}\n\t\tupdateSeconds(timeDifference);\n\t}\n\n\tfunction updateSeconds(timeDifference){\n\t\ttimeDifference = timeDifference / 1000;\n\t\tsetSecondsToKill(parseInt(timeDifference));\n\t}\n\n\tfunction actualTime(){\n\t\tvar d = new Date();\n\t\tvar actualTime = d.getTime();\n\t\treturn actualTime;\n\t}\n\n\tfunction attackRobot(){\n\t\tlet realDamage = randomizePlayerAttack();\n\t\tsetRealDamage(realDamage);\n\t\t\n\t\tshowHitAnimation('hit');\n\t\tplaySound();\n\n\t\tlet newHp = robot.hp - realDamage;\n\t\tchangeRobot(newHp);\n\t}\n\n\tfunction partyAttackRobot(){\n\t\tif(player.partyAttack > 0){\n\t\t\tlet realDamage = player.partyAttack;\n\t\t\tshowHitAnimation('hit2');\n\t\t\t//playSound();\n\t\t\tlet newHp = robot.hp - realDamage;\n\t\t\tchangeRobot(newHp);\n\t\t}\n\t}\n\n\tdocument.onkeydown = function (e) {\n    var keyCode = e.keyCode;\n    if(keyCode == 65) {\n\t\t\tattackRobot();\n    }\n\t};\n\n\tfunction showHitAnimation(className){\n\t\tlet hitDiv = document.getElementsByClassName(className)[0];\n\t\thitDiv.classList.add(\"hitAttack\");\n\n\t\thitDiv.addEventListener(\"animationstart\", function() {\n\t\t}, false);\n\t\thitDiv.addEventListener(\"animationend\", function() {\n\t\t\thitDiv.classList.remove(\"hitAttack\");\n\t\t}, false);\n\t}\n\n\tfunction isTheRobotDead(position){\n\t\tif(robot.hp <= 0){\n\t\t\tasignGoldToPlayer();\n\t\t\tsaveGameStatus();\n\t\t\tcreateNewRobot(position);\n\t\t}\n\t}\n\n\tfunction saveGameStatus(){\n\t\tsetGameStatus({\n\t\t\tlastRobotDead: robot.id,\n\t\t})\t\n\t}\n\n\tfunction goNext(){\n\t\tcreateNewRobot('next');\n\t}\n\n\tfunction goPrev(){\n\t\tcreateNewRobot('prev');\n\t}\n\n\tfunction showNextButton(){\n\t\tif(gameStatus.lastRobotDead >= robot.id){\n\t\t\treturn '';\n\t\t}\n\t\treturn 'disabled';\n\t}\n\n\tfunction showPrevButton(){\n\t\tif(robot.id > 0){\n\t\t\treturn '';\n\t\t}\n\t\treturn 'disabled';\n\t}\n\n\tfunction createNewRobot(position){\n\t\tlet newHp;\n\t\tlet newGold;\n\t\tlet newImgSrc;\n\t\tlet newId;\n\t\tconst robotImgBaseUrl = 'https://robohash.org/';\n\n\t\tif(position === 'next'){\n\t\t\tnewHp = robot.initialHp + robot.initialHp;\n\t\t\tnewGold = robot.gold + robot.gold;\n\t\t\tnewId = robot.id + 1;\n\t\t\tnewImgSrc = robotImgBaseUrl + newId;\n\t\t}else if(position === 'prev'){\n\t\t\tnewHp = robot.initialHp / 2;\n\t\t\tnewGold = robot.gold / 2;\n\t\t\tnewId = robot.id - 1;\n\t\t\tnewImgSrc = robotImgBaseUrl + newId;\n\t\t}else{\n\t\t\tnewHp = robot.initialHp;\n\t\t\tnewGold = robot.gold;\t\t\t\t\n\t\t\tnewId = robot.id;\n\t\t\tnewImgSrc = robotImgBaseUrl + newId;\n\t\t}\n\n\t\tsetSecondsToKill(0);\n\t\tchangeRobot(newHp, newHp, newGold, newImgSrc, newId, actualTime());\n\t}\n\n\tfunction randomizePlayerAttack(){\n\t\treturn Math.floor(Math.random() * (player.attackMax - player.attackMin + 1) + player.attackMin);\n\t}\n\n\tfunction buyItem(item){\n\n\t\tlet playerGold = player.gold - item.price;\n\t\tlet playerAttackMin = player.attackMin + item.damage - 1;\n\t\tlet playerAttackMax = player.attackMax + item.damage;\n\t\tlet playerPartyAttack = player.partyAttack;\n\n\t\tif(item.type === 1){\n\t\t\tplayerGold = player.gold - item.price;\n\t\t\tplayerAttackMin = player.attackMin;\n\t\t\tplayerAttackMax = player.attackMax;\n\t\t\tplayerPartyAttack = player.partyAttack + item.damage;\n\t\t}\n\n\t\tsetPlayer({\n\t\t\tgold: playerGold,\n\t\t\tattackMin: playerAttackMin,\n\t\t\tattackMax: playerAttackMax,\n\t\t\tpartyAttack: playerPartyAttack,\n\t\t})\n\t}\n\n\tfunction playSound(){\n\t\tlet audio = new Audio('sounds/punch.wav');\n\t\taudio.play();\n\t}\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tpartyAttackRobot();\n\t\t\ttimeOut();\n\t\t\tisTheRobotDead('actual');\t\t\t\n\t\t}, 100);\n\t\treturn () => clearInterval(interval);\n\t}, [robot, player]);\n\n\treturn (\n\n\t\t<div className=\"container Game\">\n      \n\t\t\t<div className=\"row containerButtonsTop\">\n\t\t\t\t<button className={`waves-effect waves-light btn-large blue lighten-2 ${showPrevButton()}`} onClick={goPrev}>Prev<i className=\"material-icons left\">arrow_back</i></button>\n\t\t\t\t<button className={`waves-effect waves-light btn-large blue lighten-2 ${showNextButton()}`} onClick={goNext}>Next<i className=\"material-icons right\">arrow_forward</i></button>\n\t\t\t</div>\n\n\t\t\t<div className=\"row s12 containerGameInfo\">\n\t\t\t\t\n\t\t\t\t<div className=\"col m5 s10 robotInfo\">\t\t\t\t\t\n\t\t\t\t\t<Hits\n\t\t\t\t\t\trealDamage={realDamage}\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<Robot\n\t\t\t\t\t\trobot={robot}\n\t\t\t\t\t\tsecondsToKill={secondsToKill}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"col m1 s2 red lighten-2 attackButton\" onClick={attackRobot}>A</button>\n\n\t\t\t\t<div className=\"col m6 s12 playerInfoAndMarket\">\n\t\t\t\t\t<Player\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t/>\n\t\t\t\t\t<Market\n\t\t\t\t\t\tmarketItemsDamage={market}\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\tbuyItem={buyItem}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t);\n\n};\n\t\nexport default Game;","import React from 'react';\nimport Game from './components/game/Game.js';\n\nimport './App.css';\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      {Game()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}